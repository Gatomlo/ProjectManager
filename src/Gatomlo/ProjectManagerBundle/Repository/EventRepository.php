<?php

namespace Gatomlo\ProjectManagerBundle\Repository;

/**
 * EventRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EventRepository extends \Doctrine\ORM\EntityRepository
{
  public function getLastEvents($limit)
  {
    return $this->createQueryBuilder('e')
    ->setMaxResults($limit)
    ->getQuery()
    ->getResult();
  }
  public function getEventsFromOwner($user)
  {
    $qb = $this->createQueryBuilder('e');
    $qb->join('e.owner','o')
       ->andWhere('o = :o')
       ->setParameter(':o',$user);

       return $qb->getQuery()->getResult();
  }

  public function getReport(array $filters = [])
  {
    $qb = $this->createQueryBuilder('e');

    foreach ($filters as $filterName => $filterValue){
       switch ($filterName) {
          case 'project':
            $qb->andWhere('e.project = :project')
               ->setParameter(':project', $filterValue);
          break;
          case 'tags':
            $qb->join('e.tags','t')
               ->andWhere('t.id IN (:tags)')
               ->setParameter(':tags', $filterValue);
            break;
          case 'user':
            $qb->join('e.project','pr')
               ->join('pr.intervenant','i')
               ->join('i.people','pe')
               ->andWhere('pe.id = :people')
               ->setParameter(':people',$filterValue);
            break;
          case 'type':
            $qb->andWhere('e.type = :type')
               ->setParameter(':type', $filterValue);
            break;
          case 'startDate':
            $qb->andWhere('e.startdate >= :start')
               ->setParameter('start',$filterValue);
            break;
          case 'endDate':
            $qb->andWhere('e.startdate <= :end')
               ->setParameter('end', $filterValue);
            break;
        }
      };
      return $qb->getQuery()->getResult();
    }

}
